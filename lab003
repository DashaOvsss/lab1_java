// Task 2: Calculate the sum of the series
class Task2 {
    public static void main(String[] args) {
        try {
            System.out.println(calculateSum(3, -2, 1)); // Example of valid parameters
            System.out.println(calculateSum(25, -2, 1)); // Example of valid parameters
            System.out.println(calculateSum(1, -2, 1)); // Invalid (k < 2)
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        }
    }

    public static double calculateSum(int k, double t, double s) {
        if (k <= 2 || k > 25) {
            throw new IllegalArgumentException("Parameter 'k' must be in the range 2 < k <= 25.");
        }
        if (t >= 0) {
            throw new IllegalArgumentException("Parameter 't' must be less than 0.");
        }

        double sum = 0;
        for (int i = 1; i <= k; i++) {
            sum += Math.log(-t * i) * Math.cos(Math.sqrt(s * (1.0 / (i * i))));
        }
        return sum;
    }
}

// Task 10: Calculate the value of the function x(t, n)
class Task10 {
    public static void main(String[] args) {
        try {
            System.out.println(calculateX(-2, 5)); // Valid for t < 0
            System.out.println(calculateX(2, 5));  // Valid for t >= 0
            System.out.println(calculateX(2, -5)); // Invalid (n < 1)
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        }
    }

    public static double calculateX(double t, int n) {
        if (n < 1) {
            throw new IllegalArgumentException("Parameter 'n' must be greater than or equal to 1.");
        }

        double sum = 0;
        if (t < 0) {
            for (int i = 1; i <= n; i++) {
                sum += t * t * i;
            }
        } else {
            for (int i = 1; i <= n; i++) {
                sum += Math.sqrt(t * i);
            }
        }
        return sum;
    }
}

// Task 13: Calculate the infinite sum with given accuracy
class Task13 {
    public static void main(String[] args) {
        try {
            System.out.println(calculateInfiniteSum(0.001)); // Example with epsilon = 0.001
            System.out.println(calculateInfiniteSum(1e-6));  // Example with epsilon = 1e-6
            System.out.println(calculateInfiniteSum(-0.01)); // Invalid (epsilon <= 0)
        } catch (IllegalArgumentException e) {
            System.err.println(e.getMessage());
        }
    }

    public static double calculateInfiniteSum(double epsilon) {
        if (epsilon <= 0) {
            throw new IllegalArgumentException("Parameter 'epsilon' must be greater than 0.");
        }

        double sum = 0;
        double term;
        int i = 1;

        do {
            term = Math.pow(-1, i) / factorial(i);
            sum += term;
            i++;
        } while (Math.abs(term) >= epsilon);

        return sum;
    }

    private static double factorial(int n) {
        double result = 1;
        for (int i = 2; i <= n; i++) {
            result *= i;
        }
        return result;
    }
}
